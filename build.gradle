buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE")
    }
}
plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id "com.jfrog.artifactory" version "4.4.0"
}
apply plugin: 'spring-boot'
version = '0.0.1-SNAPSHOT'
group = 'com.ericsson.gerrit-central.product'
sourceCompatibility = 1.8
targetCompatibility = 1.8
task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}
repositories {
    mavenCentral()
}
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile group: 'com.sonymobile.tools.gerrit', name: 'gerrit-events', version: '2.10.0'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.10'
    compile group: 'joda-time', name: 'joda-time', version: '2.9.6'
    compile group: 'com.google.guava', name: 'guava', version: '20.0'
    testCompile 'junit:junit:4.12'
}
task createVersionFile(dependsOn: processResources) << {
    new File("$buildDir/resources/main/version").withWriter { w ->
        w.writeLine project.version.toString()
    }
}
classes.dependsOn(createVersionFile)
task appZip(type: Zip, dependsOn: bootRepackage) {
    from('build/libs') {
        include '*.jar'
        into 'libs'
    }
    from('bin') {
        into 'bin'
    }
    into "${project.name}"
}
build.dependsOn(appZip)
task sourcesZip(type:Zip) {
    classifier = 'sources'
    from (sourceSets.main.allSource) {
        exclude 'VERSION'
    }
    into 'src'
}
build.dependsOn(sourcesZip)
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact appZip
            artifact sourcesZip
        }
    }
}
artifactory {
    publish {
        contextUrl = "https://arm.mo.ca.am.ericsson.se/artifactory"
        repository {
            repoKey = 'proj-gerrit-release-local'
            username = System.properties['artifactory_user']
            password = System.properties['artifactory_password']
            maven = true
        }
        defaults {
            publications('mavenJava')
        }
    }
    clientConfig.info.setBuildUrl(System.properties['buildInfo.build.url'])
}
ext.myTag = "v${project.version.toString()}"
task createTag(type: Exec) {
    if (!myTag.endsWith("SNAPSHOT")) {
        commandLine "git", "tag", "-a", myTag, "-m", "Release version ${project.version.toString()}"
    } else {
        commandLine "true"
    }
}
task pushTag(type: Exec) {
    if (!myTag.endsWith("SNAPSHOT")) {
        commandLine "git", "push", System.properties['git.url'], myTag
    } else {
        commandLine "true"
    }
}
task myOptionalTask << {
}
myOptionalTask.dependsOn(artifactoryPublish, createTag, pushTag)